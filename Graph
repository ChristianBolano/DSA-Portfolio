class Graph {
    // Inner class to keep track of edges
    static class Edge {
        int src, dest;
    }
//BOLANO CHRISTIAN 
//BSIS - 202
    // Number of vertices and edges
    int vertices, edges;

    // Array to store all edges
    Edge[] edge;

    // Constructor
    Graph(int vertices, int edges) {
        this.vertices = vertices;
        this.edges = edges;

        // Initialize the edge array
        edge = new Edge[edges];
        for (int i = 0; i < edges; i++) {
            edge[i] = new Edge();
        }
    }
}

public class Main {
    public static void main(String[] args) {
        // create an object of Graph
        int noVertices = 10; 
        int noEdges = 19;    
        Graph g = new Graph(noVertices, noEdges);

        // create graph
        g.edge[0].src = 1;
        g.edge[0].dest = 2;

        g.edge[1].src = 1;
        g.edge[1].dest = 3;

        g.edge[2].src = 1;
        g.edge[2].dest = 4;

        g.edge[3].src = 2;
        g.edge[3].dest = 4;

        g.edge[4].src = 2;
        g.edge[4].dest = 5;

        g.edge[5].src = 3;
        g.edge[5].dest = 4;

        g.edge[6].src = 3;
        g.edge[6].dest = 5;

        g.edge[7].src = 4;
        g.edge[7].dest = 5;

        g.edge[8].src = 6;
        g.edge[8].dest = 7;

        g.edge[9].src = 7;
        g.edge[9].dest = 8;

        g.edge[10].src = 8;
        g.edge[10].dest = 9;

        g.edge[11].src = 9;
        g.edge[11].dest = 10;

        g.edge[12].src = 6;
        g.edge[12].dest = 10;
       
        g.edge[13].src = 5;
        g.edge[13].dest = 8;

        g.edge[14].src = 3;
        g.edge[14].dest = 7;

        g.edge[15].src = 4;
        g.edge[15].dest = 6;

        g.edge[16].src = 7;
        g.edge[16].dest = 10;

        for (int i = 0; i < noEdges + 4; i++) {
            System.out.println(g.edge[i].src + " - " + g.edge[i].dest);
        }
    }
}
